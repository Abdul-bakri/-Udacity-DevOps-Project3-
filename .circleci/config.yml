version: '2.1'

orbs:
  slack: circleci/slack@4.1

jobs:
  notify:
    docker:
      - image: cimg/node:19.7.0
    steps:
      - slack/notify:
          custom: |
            {
              "blocks": [
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "plain_text",
                      "text": "Pipeline $CIRCLE_PIPELINE_ID has started",
                      "emoji": true
                    }
                  ]
                }
              ]
            }
          event: pass

  build-frontend:
    docker:
      - image: cimg/node:19.7.0
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: |
            cd frontend
            npm install
      - run:
          name: Build Frontend
          command: |
            cd frontend
            npm run build
      - save_cache:
          paths: [frontend/node_modules]
          key: frontend-deps
      - slack/notify:
          event: fail
          mentions: '@Abubakri Ibrahim'
          template: basic_fail_1
  build-backend:
    docker:
      - image: cimg/node:19.7.0
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: |
            cd backend
            npm install
      - run:
          name: Build Backend
          command: |
            cd backend
            npm run build
      - save_cache:
          paths: [backend/node_modules]
          key: backend-deps
      - slack/notify:
          event: fail
          mentions: '@Blac'
          template: basic_fail_1
      

  test-frontend:
    docker:
      - image: cimg/node:19.7.0
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-deps]
      - run:
          name: Install Dependencies
          command: |
            cd frontend
            npm install
      - run:
          name: Test Frontend
          command: |
            cd frontend
            npm run test
      - slack/notify:
          event: fail
          mentions: '@Abubakri Ibrahim'
          template: basic_fail_1

  test-backend:
    docker:
      - image: cimg/node:19.7.0
    steps:
      - checkout
      - restore_cache:
          keys: [backend-deps]
      - run:
          name: Install Dependencies
          command: |
            cd backend
            npm install
      - run:
          name: Test Backend
          command: |
            cd backend
            npm run test
      - slack/notify:
          event: fail
          mentions: '@Blac'
          template: basic_fail_1

  scan-frontend:
    docker:
      - image: cimg/node:19.7.0
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-deps]
      - run:
          name: Scan Frontend
          command: |
            cd frontend
            npm install
            npm audit fix --force --audit-level=critical
            npm audit --audit-level=critical
            npm run lint
            # Run frontend scan command here
      - slack/notify:
          event: fail
          mentions: '@Abubakri Ibrahim'
          template: basic_fail_1

  scan-backend:
    docker:
      - image: cimg/node:19.7.0
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-deps]
      - run:
          name: Scan Backend
          command: |
            cd backend
            npm install
            npm audit fix --force --audit-level=critical
            npm run lint
            # Run backend scan command here
      - slack/notify:
          event: fail
          mentions: '@Blac'
          template: basic_fail_1

  pipeline-end:
    docker:
      - image: cimg/node:19.7.0
    steps:
      - slack/notify:
          custom: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "plain_text",
                    "text": "Pipeline was successful. Let's Go!!!",
                    "emoji": true
                  }
                }
              ]
            }
          event: pass

workflows:
  Project-x:
    jobs:
      - notify
      - build-frontend:
          requires:
            - notify
      - test-frontend:
          requires:
            - build-frontend
      - scan-frontend:
          requires:
            - test-frontend
      - build-backend:
          requires:
            - notify
      - test-backend:
          requires:
            - build-backend
      - scan-backend:
          requires:
            - test-backend
      - pipeline-end:
          requires:
            - scan-frontend
            - scan-backend
          context: slack-secrets
